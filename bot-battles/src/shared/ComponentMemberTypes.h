#ifndef __COMPONENT_MEMBER_TYPES_H__
#define __COMPONENT_MEMBER_TYPES_H__

namespace sand {

enum class InputComponentMemberType : U32 {

    INPUT_ACCELERATION = 1 << 0,
    INPUT_ANGULAR_ACCELERATION = 1 << 1,
    INPUT_SHOOTING = 1 << 2,

    COUNT,

    INPUT_ALL = INPUT_ACCELERATION | INPUT_ANGULAR_ACCELERATION | INPUT_SHOOTING
};

enum class ComponentMemberType : U32 {

    // Transform
    TRANSFORM_ENABLED = 1 << 0,
    TRANSFORM_POSITION = 1 << 1,
    TRANSFORM_LAYER_TYPE = 1 << 2,
    TRANSFORM_ROTATION = 1 << 3,

    // Weapon
    WEAPON_ENABLED = 1 << 4,
    WEAPON_ORIGIN = 1 << 5,
    WEAPON_DESTINATION = 1 << 6,
    WEAPON_HIT = 1 << 7,

    // Collider
    COLLIDER_ENABLED = 1 << 8,
    COLLIDER_SIZE = 1 << 9,

    // Health
    HEALTH_ENABLED = 1 << 10,
    HEALTH_HEALTH = 1 << 11,
    HEALTH_DEAD = 1 << 12,

    // Spawn
    SPAWN_ENABLED = 1 << 13,

#ifdef _DRAW
    // Label
    LABEL_ENABLED = 1 << 14,
    LABEL_OFFSET = 1 << 15,
    LABEL_TEXT = 1 << 16,
    LABEL_COLOR = 1 << 17,

    // Sprite
    SPRITE_ENABLED = 1 << 18,
    SPRITE_FILE = 1 << 19,
    SPRITE_SPRITE_NAME_TO_TEXTURE_COORDS = 1 << 20,
    SPRITE_SPRITE_NAME = 1 << 21,
#endif

    COUNT,

    TRANSFORM_ALL = TRANSFORM_ENABLED | TRANSFORM_POSITION | TRANSFORM_LAYER_TYPE | TRANSFORM_ROTATION,
    WEAPON_ALL = WEAPON_ENABLED | WEAPON_ORIGIN | WEAPON_DESTINATION | WEAPON_HIT,
    COLLIDER_ALL = COLLIDER_ENABLED | COLLIDER_SIZE,
    HEALTH_ALL = HEALTH_ENABLED | HEALTH_HEALTH | HEALTH_DEAD,
    SPAWN_ALL = SPAWN_ENABLED,
#ifdef _DRAW
    LABEL_ALL = LABEL_ENABLED | LABEL_OFFSET | LABEL_TEXT | LABEL_COLOR,
    SPRITE_ALL = SPRITE_ENABLED | SPRITE_FILE | SPRITE_SPRITE_NAME_TO_TEXTURE_COORDS | SPRITE_SPRITE_NAME,

    ALL = TRANSFORM_ALL | WEAPON_ALL | COLLIDER_ALL | HEALTH_ALL | SPAWN_ALL | LABEL_ALL | SPRITE_ALL
#else

    ALL = TRANSFORM_ALL | WEAPON_ALL | COLLIDER_ALL | HEALTH_ALL | SPAWN_ALL
#endif
};
}

#endif
