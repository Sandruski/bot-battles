# coding: utf-8

import enum

class InputComponent:
    maxLinearVelocity : float = ...
    maxAngularVelocity : float = ...
    def shootPrimaryWeapon(self): ...
    def shootSecondaryWeapon(self): ...
    def reload(self): ...
    def heal(self): ...

class TransformComponent:
    positionX : float = ...
    positionY : float = ...
    rotation : float = ...
    directionX : float = ...
    directionY : float = ...


class RigidbodyComponent:
    linearVelocityX : float = ...
    linearVelocityY : float = ...
    angularVelocity : float = ...

class WeaponComponent:
    primaryWeaponDamage : int = ...
    secondaryWeaponDamage : int = ...
    currentAmmo : int = ...
    maxAmmo : int = ...
    def hasAmmoBox(self) -> bool: ...
    ammoBoxAmmo : int = ...
    primaryWeaponRange : float = ...
    secondaryWeaponRange : float = ...
    primaryWeaponShootingTime : float = ...
    primaryWeaponShootingCooldown : float = ...
    secondaryWeaponShootingTime : float = ...
    secondaryWeaponShootingCooldown : float = ...
    reloadingTime : float = ...
    reloadingCooldown : float = ...

class HealthComponent:
    currentHP : int = ...
    maxHP : int = ...
    def hasFirstAidBox(self) -> bool: ...
    firstAidBoxHP : int = ...
    healingTime : float = ...
    healingCooldown : float = ...

class MapComponent:
    def getTile(self, i : int, j : int) -> Tile: ...
    def getWorldPosition(self, i : int, j : int) -> tuple[float, float]: ...
    tileCountX : int = ...
    tileCountY : int = ...

class Tile:
     tileType : TileType = ...

class TileType(enum.Enum):
    NONE : TileType = ...
    FLOOR : TileType = ...
    BOT_SPAWNER : TileType = ...
    WEAPON_SPAWNER : TileType = ...
    HEALTH_SPAWNER : TileType = ...